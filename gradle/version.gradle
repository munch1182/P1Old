/**
 * 统一进行依赖和版本管理
 *
 * androidX：参见https://developer.android.google.cn/jetpack/androidx/migrate
 */
apply from: './gradle/gitversion.gradle'

ext {

    versions = [

            compileSdkVersion: 28,
            minSdkVersion    : 15,
            targetVersion    : 28,

            applicationId    : "com.munch.projectone",

            versionCode      : gitVersion['versionCode'],
            versionName      : gitVersion['versionName'],

            roomVersion      : "2.1.0",
            lifecycleVersion : "2.0.0",

            kotlinVersion    : "1.3.31",

            androidxVersion  : "1.0.2",

            glideVersion     : "4.9.0",

            okhttpVersion    : "3.13.1",

            leakcanaryVersion: "1.6.3",
            retrofitVersion  : "2.5.0"
    ]

    dependencies = [

            "kotlin"                          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions['kotlinVersion']}",
            "kotlin_gradle"                   : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions['kotlinVersion']}",

            "appcompat"                       : "androidx.appcompat:appcompat:${versions['androidxVersion']}",
            "recyclerview"                    : "androidx.recyclerview:recyclerview:${versions['androidxVersion']}",
            "core_ktx"                        : "androidx.core:core-ktx:${versions['androidxVersion']}",
            "material"                        : "com.google.android.material:material:1.0.0",
            "cardview"                        : "androidx.cardview:cardview:${versions['androidxVersion']}",
            "viewpager"                       : "androidx.viewpager:viewpager:${versions['androidxVersion']}",

            /*https://developer.android.google.cn/jetpack/androidx/releases/lifecycle?hl=en*/
            // ViewModel and LiveData
            "lifecycle"                       : "androidx.lifecycle:lifecycle-extensions:${versions['lifecycleVersion']}",
            // alternatively - just ViewModel
            "viewmodel"                       : "androidx.lifecycle:lifecycle-viewmodel:${versions['lifecycleVersion']}",
            // For Kotlin use lifecycle-viewmodel-ktx
            "viewmodel_ktx"                   : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions['lifecycleVersion']}",
            // alternatively - just LiveData
            "livedata"                        : "androidx.lifecycle:lifecycle-livedata:${versions['lifecycleVersion']}",
            // alternatively - Lifecycles only (no ViewModel or LiveData).
            // AndroidX libraries use this lightweight import for Lifecycle
            "lifecycle_runtime"               : "androidx.lifecycle:lifecycle-runtime:${versions['lifecycleVersion']}",
            // For Kotlin use kapt instead of annotationProcessor
            "lifecycle_compiler"              : "androidx.lifecycle:lifecycle-compiler:${versions['lifecycleVersion']}",
            // alternately - if using Java8, use the following instead of lifecycle-compiler
            "lifecycle_compiler_java8"        : "androidx.lifecycle:lifecycle-common-java8:${versions['lifecycleVersion']}",
            // optional - Test helpers for LiveData
            "livedata_test"                   : "androidx.arch.core:core-testing:${versions['lifecycleVersion']}",

            /*https://developer.android.google.cn/jetpack/androidx/releases/room?hl=en*/
            "room"                            : "androidx.room:room-runtime:${versions['roomVersion']}",
            "room_compiler"                   : "androidx.room:room-compiler:${versions['roomVersion']}",
            "room_ktx"                        : "androidx.room:room-ktx:${versions['roomVersion']}",
            "room_rxjava2"                    : "androidx.room:room-rxjava2:${versions['roomVersion']}",
            "room_test"                       : "androidx.room:room-testing:${versions['roomVersion']}",

            "v4"                              : "androidx.legacy:legacy-support-v4:1.0.0",
            "annotation"                      : "androidx.annotation:annotation:${versions['androidxVersion']}",

            "multidex"                        : "androidx.multidex:multidex:2.0.0",

            /*https://github.com/bumptech/glide*/
            "glide"                           : "com.github.bumptech.glide:glide:${versions['glideVersion']}",
            "glide_compiler"                  : "com.github.bumptech.glide:compiler:${versions['glideVersion']}",
            /*https://muyangmin.github.io/glide-docs-cn/int/okhttp3.html*/
            "glide_intergation"               : "com.github.bumptech.glide:okhttp3-integration:${versions['glideVersion']}",

            /*https://github.com/square/okhttp*/
            "okhttp"                          : "com.squareup.okhttp3:okhttp:${versions['okhttpVersion']}",
            /*https://github.com/square/okhttp/tree/master/okhttp-logging-interceptor*/
            "okHttp_interceptor"              : "com.squareup.okhttp3:logging-interceptor:${versions["okHttpVersion"]}",

            /*https://github.com/square/leakcanary*/
            "leakcanary"                      : "com.squareup.leakcanary:leakcanary-android:${versions['leakcanaryVersion']}",
            "leakcanary_fragment"             : "com.squareup.leakcanary:leakcanary-support-fragment:${versions['leakcanaryVersion']}",
            "leakcanary_release"              : "com.squareup.leakcanary:leakcanary-android-no-op:${versions['leakcanaryVersion']}",

            /*https://github.com/ReactiveX/RxJava*/
            "rxjava"                          : "io.reactivex.rxjava2:rxjava:2.2.7",
            /*https://github.com/ReactiveX/RxAndroid*/
            "rxandroid"                       : "io.reactivex.rxjava2:rxandroid:2.1.1",
            /*https://github.com/JakeWharton/RxRelay*/
            "rxrelay"                         : 'com.jakewharton.rxrelay2:rxrelay:2.1.0',

            /*https://github.com/square/retrofit*/
            "retrofit"                        : "com.squareup.retrofit2:retrofit:${versions['retrofitVersion']}",
            /*https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2*/
            "retrofit_rxjava2"                : "com.squareup.retrofit2:adapter-rxjava2:${versions['retrofitVersion']}",
            /*https://github.com/square/retrofit/tree/master/retrofit-converters/gson*/
            "retrofit_gson"                   : "com.squareup.retrofit2:converter-gson:${versions['retrofitVersion']}",

            /*Gson*/
            /*https://github.com/google/gson*/
            "gson"                            : "com.google.code.gson:gson:2.8.5",

            /*Fastjson*/
            /*https://github.com/alibaba/fastjson*/
            "fastjson"                        : "com.alibaba:fastjson:1.1.70.android",

            /*https://github.com/HujiangTechnology/gradle_plugin_android_aspectjx*/
            "aspectjx_hujiang_plugin"         : "com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4",
            "aspectjx_hujiang"                : "org.aspectj:aspectjrt:1.8.9",

            /*https://github.com/CymChad/BaseRecyclerViewAdapterHelper*/
            "base_recyclerview_adapter_helepr": "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46",

            /*https://github.com/Curzibn/Luban*/
            "luban"                           : "top.zibin:Luban:1.1.8",

            /*https://github.com/facebook/stetho*/
            "stetho"                          : "com.facebook.stetho:stetho:1.5.1",
            "stetho_okhttp"                   : "com.facebook.stetho:stetho-okhttp3:1.5.1"
    ]
}