plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.munch.plugin.android'
    id 'kotlin-kapt'
    // ksp
    /*https://kotlinlang.org/docs/ksp-quickstart.html#use-your-own-processor-in-a-project*/
    id 'com.google.devtools.ksp' version '1.7.10-1.0.6'
}
apply from: '../buildCom/commonbuildktx.gradle'

android {
    applicationVariants.all { variant -> setupModuleApk(variant) }
}

dependencies {

    implementation deps['material']

    implementation project(':libfast')
    implementation project(':libweight')
    implementation project(':libbluetooth')

    implementation 'com.github.munch1182.ProjectTwo:annotation:0.1.3'

    //implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta02"

    implementation deps['glide']
    implementation deps['glideIntegration']
    kapt deps['glideCompiler']

    implementation deps['okhttpInterceptor']

    implementation deps['room']
    implementation deps['roomKtx']
    ksp deps['roomCompiler']


    implementation deps['work']
    implementation deps['workKtx']
}

pluginAndroid {
    minTime = 10L
}

private static def setupModuleApk(variant) {
    if (variant == null) {
        return
    }
    def applicationId = [variant.applicationId, variant.buildType.applicationIdSuffix].findAll().join()
    def date = getTime()
    variant.outputs.each { output ->
        // 正式版下设置versionCode，参见gitVersion.gradle
        // 正式版更改输出app文件名
        if (!variant.getBuildType().isDebuggable()) {
            // 文件名前缀 + 渠道名
            def startName = applicationId
            def flavorName = variant.flavorName
            if (flavorName != null && flavorName != "") {
                startName += "_$flavorName"
            }
            // 文件名后缀
            def endName = "_${variant.versionName}_${date}.apk"
            output.outputFileName = startName + endName
        }
    }
}

private static def getTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08"))
}