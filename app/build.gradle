apply plugin: 'com.android.application'

apply from: '../commonbuild.gradle'

def keyProperties = null

try {
    def keyFile = rootProject.file('key.properties')

    if (keyFile) {
        keyProperties = new Properties()
        keyProperties.load(new FileInputStream(keyFile))
    }
} catch (Ignored) {
    println "READ KEY FILE FAIL"
}

android {

    signingConfigs {

        release {
            if (null != keyProperties) {
                keyAlias keyProperties['alias']
                keyPassword keyProperties['password']
                storeFile file(keyProperties['path'])
                storePassword keyProperties['alias_password']
            }
        }
    }

    buildTypes {

        release {

            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
//                    updateFileName(output)
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        outputFileName = "${variant.productFlavors[0].name}_${releaseTime()}_${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
                        outputFileName = "${releaseTime()}_${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
                    }
                }
            }
        }

        debug {
            minifyEnabled false

            signingConfig signingConfigs.release
            //更改开发版applicationId和versionName
            applicationIdSuffix '.debug'
            versionNameSuffix "_debug"
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}

dependencies {

    implementation project(':libApp')
    if (!isModule.toBoolean()) {
        implementation project(':moduleMain')
    }
}
